<sequence_node size='1'>
  <function_definition_node name='og' qualifier='public' type='integer'>
    <arguments>
    </arguments>
    <block_node>
      <declarations>
      </declarations>
      <instructions>
        <sequence_node size='3'>
          <write_node>
            <sequence_node size='1'>
              <integer_node>9</integer_node>
            </sequence_node>
          </write_node>
          <for_node>
            <initializers>
              <sequence_node size='1'>
              </sequence_node>
            </initializers>
            <condition>
              <sequence_node size='1'>
                <lt_node>
                  <rvalue_node>
                      <variable_node>x</variable_node>
                  </rvalue_node>
                  <neg_node>
                    <integer_node>3</integer_node>
                  </neg_node>
                </lt_node>
              </sequence_node>
            </condition>
            <increments>
              <sequence_node size='1'>
                <assignment_node>
                <variable_node>x</variable_node>
                    <add_node>
                      <rvalue_node>
                          <variable_node>x</variable_node>
                      </rvalue_node>
                      <integer_node>1</integer_node>
                    </add_node>
                </assignment_node>
              </sequence_node>
            </increments>
            <block>
              <write_node>
                <sequence_node size='1'>
                  <rvalue_node>
                      <variable_node>x</variable_node>
                  </rvalue_node>
                </sequence_node>
              </write_node>
            </block>
          </for_node>
          <return_node>
            <sequence_node size='1'>
              <integer_node>0</integer_node>
            </sequence_node>
          </return_node>
        </sequence_node>
      </instructions>
    </block_node>
  </function_definition_node>
</sequence_node>
